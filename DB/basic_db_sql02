// Table 삭제
DROP TABLE T_STUDENT_HOBBY;

// Set primary, foreign key
CREATE TABLE T_STUDENT_HOBBY(
    I_STUDENT NUMBER,
    I_HOBBY NUMBER,
    R_DT DATE DEFAULT SYSDATE,
    PRIMARY KEY(I_STUDENT, I_HOBBY),
    FOREIGN KEY(I_STUDENT) REFERENCES T_STUDENT(I_STUDENT) on delete cascade,
    FOREIGN KEY(I_HOBBY) REFERENCES T_HOBBY(I_HOBBY)
);

// Join
SELECT * FROM T_STUDENT_HOBBY A
INNER JOIN T_STUDENT B
ON A.I_STUDENT = B.I_STUDENT;

SELECT A.I_STUDENT, B.STUDENT_NAME AS STUDENT_NAME, A.I_HOBBY, C.NM AS HOBBY_NAME 
FROM T_STUDENT_HOBBY A
INNER JOIN T_STUDENT B
ON A.I_STUDENT = B.I_STUDENT
INNER JOIN T_HOBBY C
ON A.I_HOBBY = C.I_HOBBY;
-INNER : 교집합 (6개 보장 아님)
-- 게시글전체  & 좋아요 한 게시글 -> 좋아요가 없는 글은 안나옴
-- 이 게시글에서 내가쓴글만 볼 때


SELECT A.I_STUDENT, B.STUDENT_NAME AS STUDENT_NAME, A.I_HOBBY, C.NM AS HOBBY_NAME 
FROM T_STUDENT_HOBBY A
LEFT JOIN T_STUDENT B
ON A.I_STUDENT = B.I_STUDENT
LEFT JOIN T_HOBBY C
ON A.I_HOBBY = C.I_HOBBY;
--LEFT JOIN 교집합이 없어도 무조건 찍음 (빈 DATA = NULL로)
FROM T_STUDENT_HOBBY A LEFT JOIN T_STUDENT B
--무조건 T_STUDENT_HOBBY 데이터수 값 다 찍음(6개 보장)
-- 게시글전체  & 좋아요 한 게시글 -> 게시글 전체 다나옴 (좋아요 & 좋아요 아닌것)
-- 이때 좋아요가 아닌것을 확인할 때 NULL을 0으로 하면 알 수 있음.
-- 이 게시글을 다 + 내가 쓴글도 볼 때


